# Copyright (c) 2021 The PRCY developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.
name: Github Actions CI for PoA Miner
on: [push, pull_request]
env:
  SOURCE_ARTIFACT: source
jobs:
  create-source-distribution:
    name: Create Source Distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: source
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # May need qt and protobuf to configure qt and include prcycoin-qt.1 in distribution
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install automake git make gcc
    - name: Create Distribution Tarball
      run: |
        mkdir -p $ARTIFACT_DIR
        touch poaminer.tar.gz
        tar -czf poaminer.tar.gz --exclude=poaminer.tar.gz .
    - name: Prepare Files for Artifact
      run: |
        mv poaminer.tar.gz $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
        path: ${{ env.ARTIFACT_DIR }}
  build-x86_64-linux:
    name: Build for x86 Linux 64bit
    needs: create-source-distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: poaminer-x86_64-linux
      TEST_LOG_ARTIFACT_DIR: test-logs
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf poaminer.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev
    - name: Build POA Miner 
      run: |
        ./autogen.sh
        ./configure CFLAGS="-O3"
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        strip $SOURCE_ARTIFACT/minerd
        chmod +x $SOURCE_ARTIFACT/minerd
        mv $SOURCE_ARTIFACT/minerd $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.ARTIFACT_DIR }}
        path: ${{ env.ARTIFACT_DIR }}
  build-win64:
    name: Build for Win64
    needs: create-source-distribution
    runs-on: ubuntu-18.04
    env:
      ARTIFACT_DIR: poaminer-win64
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf poaminer.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64

    - name: Switch MinGW GCC and G++ to POSIX Threading
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build POA Miner
      run: |
        wget -N https://curl.haxx.se/download/curl-7.40.0.tar.gz && tar xzf curl-7.40.0.tar.gz
        wget -N https://sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.tar.gz && tar xzf pthreads-w32-2-9-1-release.tar.gz
        cd curl-7.40.0
        ./configure --with-winssl --enable-static --prefix=/ --host=x86_64-w64-mingw32 --disable-shared
        make
        cd ../pthreads-w32-2-9-1-release/
        cp config.h pthreads_win32_config.h
        make -f GNUmakefile CROSS="x86_64-w64-mingw32-" clean GC-static
        cp libpthreadGC2.a /home/runner/work/POA-Miner/win64_deps/lib/libpthread.a
        cp pthread.h semaphore.h sched.h /home/runner/work/POA-Miner/win64_deps/include
        cd ../POA-Miner
        ./build.sh
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        strip $SOURCE_ARTIFACT/{minerd.exe}
        mv $SOURCE_ARTIFACT/{minerd.exe} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.ARTIFACT_DIR }}
        path: ${{ env.ARTIFACT_DIR }}
  build-mac:
    name: Build for Mac
    needs: create-source-distribution
    runs-on: macos-10.15
    env:
      ARTIFACT_DIR: poaminer-mac
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v1
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf poaminer.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        brew install automake openssl zlib curl jansson make
    - name: Build POA Miner 
      run: |
        ./autogen.sh
        ./nomacro.pl
        ./configure CFLAGS="-march=native"
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        strip $SOURCE_ARTIFACT/minerd
        chmod +x $SOURCE_ARTIFACT/minerd
        mv $SOURCE_ARTIFACT/minerd $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ env.ARTIFACT_DIR }}
        path: ${{ env.ARTIFACT_DIR }}